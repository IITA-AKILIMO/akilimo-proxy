version: "3"

networks:
  web:
    external: true
  internal:
    external: false

services:
  traefik:
    image: traefik:1.7.8-alpine
    container_name: traefik
    domainname: ${DOMAIN}
    #command: --api --docker  # Enables the web UI and tells Traefik to listen to docker
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}/conf/${CONFIG_FILE}:/traefik.toml
      - ${PWD}/conf/acme.json:/acme.json
    labels:
      - traefik.enable=true
      - traefik.backend=monitor
      - traefik.frontend.rule=Host:monitor.${DOMAIN}
      - traefik.docker.network=web
      - traefik.port=${MONITOR_PORT}
      - traefik.docker.domain=${DOMAIN}
    networks:
      - web
  blog:
    image: wordpress:4.9.8-apache
    environment:
      WORDPRESS_DB_PASSWORD: ${CROP_DATABASE_PASSWORD}
    labels:
      - traefik.backend=blog
      - traefik.frontend.rule=Host:spring.${DOMAIN}
      - traefik.docker.network=web
      - traefik.port=80
    networks:
      - internal
      - web
    depends_on:
      - db
  db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: ${CROP_DATABASE_PASSWORD}
      MYSQL_DATABASE: ${CROP_DATABASE}
      MYSQL_USER: ${CROP_DATABASE_USERNAME}
      MYSQL_PASSWORD: ${CROP_DATABASE_PASSWORD}
    networks:
      - internal
    labels:
      - traefik.enable=false
  adminer:
    container_name: adminer
    image: adminer
    environment:
      ADMINER_DEFAULT_DB_DRIVER: mysql
      ADMINER_DEFAULT_DB_HOST: db
      ADMINER_DEFAULT_DB_NAME: ${CROP_DATABASE}
      ADMINER_DESIGN: nette
      ADMINER_PLUGINS: tables-filter tinymce
    restart: on-failure
    links:
      - db:mysql
    ports:
      - 8080:8080
    labels:
      - traefik.enable=true
      - traefik.backend=adminer
      - traefik.frontend.rule=Host:adminer.${DOMAIN}
      - traefik.docker.network=web
    networks:
      - web
      - internal
    depends_on:
      - traefik
      - db