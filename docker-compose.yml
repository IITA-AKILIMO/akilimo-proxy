version: '3.3'

services:
  db:
    image: mariadb:10.2
    container_name: db
    restart: on-failure
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: ${CROP_DATABASE_PASSWORD}
      MYSQL_DATABASE: ${CROP_DATABASE}
      MYSQL_USER: ${CROP_DATABASE_USERNAME}
      MYSQL_PASSWORD: ${CROP_DATABASE_PASSWORD}
    volumes:
      - ${PWD}/database:/var/lib/mysql
    labels:
      - traefik.enable=true
    networks:
      - internal
  traefik:
    image: traefik:1.7.8-alpine
    container_name: traefik
    domainname: ${DOMAIN}
    #command: --api --docker  # Enables the web UI and tells Traefik to listen to docker
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}/conf/${CONFIG_FILE}:/traefik.toml
      - ${PWD}/conf/acme.json:/acme.json
    labels:
      - traefik.enable=true
      - traefik.backend=monitor
      - traefik.frontend.rule=Host:monitor.${DOMAIN}
      - traefik.docker.network=web
      - traefik.port=${MONITOR_PORT}
    networks:
      - web
  adminer:
    container_name: adminer
    #image: adminer:4.3.1-standalone
    image: adminer
    environment:
      ADMINER_DEFAULT_DB_DRIVER: mysql
      ADMINER_DEFAULT_DB_HOST: db
      ADMINER_DEFAULT_DB_NAME: ${CROP_DATABASE}
      ADMINER_DESIGN: nette
      ADMINER_PLUGINS: tables-filter tinymce
    restart: on-failure
    links:
      - db:mysql
    ports:
      - 8080:8080
    labels:
      - traefik.enable=true
      - traefik.backend=adminer
      - traefik.frontend.rule=Host:adminer.${DOMAIN}
      - traefik.docker.network=web
    networks:
      - web
      - internal
    depends_on:
      - traefik
      - db
  spring:
    container_name: spring
    #image: tsobu/spring-cropmanager:latest
    image: iita/acai-akilimo-api:latest
    restart: on-failure
    ports:
      #- "8098-8200:8098"
      - 8098:8098
    labels:
      - traefik.enable=true
      - traefik.backend=spring
      - traefik.frontend.rule=Host:spring.${DOMAIN}
      - traefik.docker.network=web
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - CROP_DATABASE_URL=${CROP_DATABASE_URL}
      - CROP_DATABASE_USERNAME=${CROP_DATABASE_USERNAME}
      - CROP_DATABASE_PASSWORD=${CROP_DATABASE_PASSWORD}
      - PLUMBER_ENDPOINT=${PLUMBER_ENDPOINT}
      - PLUMBER_FR=${PLUMBER_FR}
      - PLUMBER_PP=${PLUMBER_PP}
      - PLUMBER_IC=${PLUMBER_IC}
      - PLUMBER_SP=${PLUMBER_SP}
      - PLUMBER_HS=${PLUMBER_HS}
      - VERIFY_CERT=${VERIFY_CERT}
      - MS_WEBHOOK=${MS_WEBHOOK}
      - MS_TEST_NUMBERS=${MS_TEST_NUMBERS}
      - INFOBIP_ENDPOINT=${INFOBIP_ENDPOINT}
      - INFOBIP_SENDER=${INFOBIP_SENDER}
      - INFOBIP_USER_NAME=${INFOBIP_USER_NAME}
      - INFOBIP_USER_PASS=${INFOBIP_USER_PASS}
      - INFOBIP_AUTH_KEY=${INFOBIP_AUTH_KEY}
      - PLIVO_ENDPOINT=${PLIVO_ENDPOINT}
      - PLIVO_AUTH_KEY=${PLIVO_AUTH_KEY}
      - PLIVO_AUTH_ID=${PLIVO_AUTH_ID}
      - PLIVO_SENDER=${PLIVO_SENDER}
    depends_on:
      - traefik
      - db
      - plumber
    networks:
      - web
      - internal
  plumber:
    container_name: plumber
    #image: tsobu/plumber-cropmanager:release-2.0
    #image: tsobu/plumber-cropmanager:latest
    #image: iita/akilimo-compute:latest
    image: iita/akilimo-compute:full
    restart: on-failure
    ports:
      - 8000:8000
    labels:
      - traefik.enable=true
      - traefik.backend=plumber
      - traefik.frontend.rule=Host:plumber.${DOMAIN}
      - traefik.docker.network=web
    volumes:
      - ${R_ROOT}/akilimo_recommendation:${R_ROOT}/akilimo_recommendation
      - ${R_ROOT}/gisdata:${R_ROOT}/gisdata
      - ${R_ROOT}/currentyield:${R_ROOT}/currentyield
    depends_on:
      - traefik
    networks:
      - web
      - internal
  netdata:
    container_name: netdata
    image: netdata/netdata
    hostname: netdata.${DOMAIN}
    restart: always
    ports:
      - 19999:19999
    labels:
      - traefik.enable=true
      - traefik.backend=netdata
      - traefik.frontend.rule=Host:netdata.${DOMAIN}
      - traefik.docker.network=web
      - traefik.frontend.auth.basic=${USER_PASS}
    environment:
      - PGID=${DOCKER_GROUP}
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    depends_on:
      - traefik
    networks:
      - web
      - internal
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
networks:
  internal:
    external: false
  web:
    external: true
