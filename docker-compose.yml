version: '3.3'

services:

  adminer:
    container_name: adminer
    image: adminer
    environment:
      ADMINER_DEFAULT_DB_DRIVER: mysql
      ADMINER_DEFAULT_DB_HOST: mysql-ld
      ADMINER_DEFAULT_DB_NAME: ${DATABASE}
      ADMINER_DESIGN: nette
      ADMINER_PLUGINS: tables-filter tinymce
    restart: on-failure
    links:
      - mysql-ld:mysql
    ports:
      - 9080:8080
    networks:
      - web
      - internal
    depends_on:
      - mysql-ld
  
  mysql-ld:
    container_name: mysql-ld
    image: mysql:8.0
    volumes:
      - ${PWD}/mysql-init-files:/docker-entrypoint-initdb.d
      - ${PWD}/db_data:/var/lib/mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE}
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      LOGSENE_ENABLED: "false"
      REMOTE_SQL: ${PWD}/mysql-init-files/init.sql
    networks:
      - internal

  
  dms:
    container_name: dms
    image: logicaldoc/logicaldoc-ce
    volumes:
    - ${PWD}/dms/logicaldoc-conf:/opt/logicaldoc/conf'
    - ${PWD}/dms/logicaldoc-repo:/opt/logicaldoc/repository'
    command: ["./wait-for-it.sh", "mysql-ld:3306", "-t", "30", "--", "/opt/logicaldoc/start-logicaldoc.sh", "run"]
    depends_on: 
      - mysql-ld
    ports:
      - 9100:8080
    environment:
      - DB_HOST=mysql-ld
      - DB_ENGINE=mysql
      - DB_NAME=akilimo_dms
      - MYSQL_USER=${DATABASE_USERNAME}
      - MYSQL_PASSWORD=${DATABASE_PASSWORD}
      - LDOC_MEMORY=2000
    networks:
      - web
      - internal

  akilimo-api:
    container_name: akilimo-api
    image: iita/iita-akilimo-api:${API_VERSION_TAG}
    restart: on-failure
    ports:
      - 8098:8098
    volumes:
      - ${PWD}/log:/log
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - CROP_DATABASE_URL=${DATABASE_URL}
      - CROP_DATABASE_USERNAME=${DATABASE_USERNAME}
      - CROP_DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - SMS_USER=${SMS_USER}
      - SMS_TOKEN=${SMS_TOKEN}
      - DEMO_MODE=${DEMO_MODE}
      - PLUMBER_ENDPOINT=${PLUMBER_ENDPOINT}
      - PLUMBER_DEV_ENDPOINT=${PLUMBER_DEV_ENDPOINT}
      - TZ_ENDPOINT=${TZ_ENDPOINT}
      - TZ_DEMO_ENDPOINT=${TZ_DEMO_ENDPOINT}
      - NG_DEMO_ENDPOINT=${NG_DEMO_ENDPOINT}
      - NG_ENDPOINT=${NG_ENDPOINT}
      - VERIFY_CERT=${VERIFY_CERT}
      - TZS_USD_RATE=${TZS_USD_RATE}
      - NGN_USD_RATE=${NGN_USD_RATE}
      - KES_USD_RATE=${KES_USD_RATE}
      - RATE_TYPE=${RATE_TYPE}
      - ENABLE_RATE_LIMIT=${ENABLE_RATE_LIMIT}
      - RATE_LIMIT=${RATE_LIMIT}
    depends_on:
      - mysql-ld
    networks:
      - web
      - internal

#  compute-prod:
#    container_name: compute-prod
#    image: iita/akilimo-compute:${COMPUTE_PRODUCTION_TAG}
#    restart: on-failure
#    environment:
#      - RSTUDIO_PANDOC=${RSTUDIO_PANDOC}
#    ports:
#      - 8000:8000
#    volumes:
#      - ${R_ROOT}/akilimo_recommendation:${R_ROOT}/akilimo_recommendation
#      - ${R_ROOT}/gisdata:${R_ROOT}/gisdata
#      - ${R_ROOT}/currentyield:${R_ROOT}/currentyield
#    networks:
#      - web
#      - internal

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    restart: unless-stopped
    environment:
      DOZZLE_TAILSIZE: 500
      LOGSENE_ENABLED: "false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080


networks:
  internal:
    external: false
  web:
    external: true
