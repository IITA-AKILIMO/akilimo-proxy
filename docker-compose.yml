version: '3.3'

services:
  traefik:
    image: traefik:1.7.8-alpine
    # image: traefik:v2.0.5
    container_name: traefik
    domainname: ${DOMAIN}
    #command: --api --docker  # Enables the web UI and tells Traefik to listen to docker
    restart: always
    environment:
      LOGSENE_ENABLED: "false"
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}/conf/${CONFIG_FILE}:/traefik.toml
      - ${PWD}/conf/acme.json:/acme.json
    labels:
      - traefik.enable=true
      - traefik.backend=monitor
      - traefik.frontend.rule=Host:monitor.${DOMAIN}
      - traefik.docker.network=web
      - traefik.port=${MONITOR_PORT}
      - traefik.docker.domain=${DOMAIN}
    networks:
      - web
  db:
    image: mysql:5.7
    volumes:
      - ${PWD}/mysql-init-files:/docker-entrypoint-initdb.d
      - ${PWD}/db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: ${CROP_DATABASE_PASSWORD}
      MYSQL_DATABASE: ${CROP_DATABASE}
      MYSQL_USER: ${CROP_DATABASE_USERNAME}
      MYSQL_PASSWORD: ${CROP_DATABASE_PASSWORD}
      LOGSENE_ENABLED: "false"
      REMOTE_SQL: ${PWD}/mysql-init-files/init.sql
    labels:
      - traefik.enable=true
    networks:
      - internal
  adminer:
    container_name: adminer
    image: adminer
    environment:
      ADMINER_DEFAULT_DB_DRIVER: mysql
      ADMINER_DEFAULT_DB_HOST: db
      ADMINER_DEFAULT_DB_NAME: ${CROP_DATABASE}
      ADMINER_DESIGN: nette
      ADMINER_PLUGINS: tables-filter tinymce
      LOGSENE_ENABLED: "false"
    restart: on-failure
    links:
      - db:mysql
    ports:
      - 9080:8080
    labels:
      - traefik.enable=true
      - traefik.backend=adminer
      - traefik.frontend.rule=Host:adminer.${DOMAIN}
      - traefik.docker.network=web
    networks:
      - web
      - internal
    depends_on:
      - traefik
      - db
  spring:
    container_name: spring
    image: iita/iita-akilimo-api:latest
    restart: on-failure
    ports:
      #- "8098-8200:8098"
      - 8098:8098
    volumes:
      - ${PWD}/log:/log
    labels:
      - traefik.enable=true
      - traefik.backend=spring
      - traefik.frontend.rule=Host:spring.${DOMAIN}
      - traefik.docker.network=web
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - CROP_DATABASE_URL=${CROP_DATABASE_URL}
      - CROP_DATABASE_USERNAME=${CROP_DATABASE_USERNAME}
      - CROP_DATABASE_PASSWORD=${CROP_DATABASE_PASSWORD}
      - DEMO_MODE=${DEMO_MODE}
      - PLUMBER_ENDPOINT=${PLUMBER_ENDPOINT}
      - TZ_ENDPOINT=${TZ_ENDPOINT}
      - TZ_DEMO_ENDPOINT=${TZ_DEMO_ENDPOINT}
      - NG_DEMO_ENDPOINT=${NG_DEMO_ENDPOINT}
      - NG_ENDPOINT=${NG_ENDPOINT}
      - VERIFY_CERT=${VERIFY_CERT}
      - MS_WEBHOOK=${MS_WEBHOOK}
      - TZS_USD_RATE=${TZS_USD_RATE}
      - NGN_USD_RATE=${NGN_USD_RATE}
      - KES_USD_RATE=${KES_USD_RATE}
      - MS_TEST_NUMBERS=${MS_TEST_NUMBERS}
      - INFOBIP_ENDPOINT=${INFOBIP_ENDPOINT}
      - INFOBIP_SENDER=${INFOBIP_SENDER}
      - INFOBIP_USER_NAME=${INFOBIP_USER_NAME}
      - INFOBIP_USER_PASS=${INFOBIP_USER_PASS}
      - INFOBIP_AUTH_KEY=${INFOBIP_AUTH_KEY}
      - PLIVO_ENDPOINT=${PLIVO_ENDPOINT}
      - PLIVO_AUTH_KEY=${PLIVO_AUTH_KEY}
      - PLIVO_AUTH_ID=${PLIVO_AUTH_ID}
      - PLIVO_SENDER=${PLIVO_SENDER}
    depends_on:
      - traefik
      - db
    networks:
      - web
      - internal
  # plumber:
  #   container_name: plumber
  #   image: iita/akilimo-compute:latest
  #   restart: on-failure
  #   ports:
  #     - 8700:8000
  #   labels:
  #     - traefik.enable=true
  #     - traefik.backend=plumber
  #     - traefik.frontend.rule=Host:compute.${DOMAIN}
  #     - traefik.docker.network=web
  #   volumes:
  #     - ${R_ROOT}/akilimo_recommendation:${R_ROOT}/akilimo_recommendation
  #     - ${R_ROOT}/gisdata:${R_ROOT}/gisdata
  #     - ${R_ROOT}/currentyield:${R_ROOT}/currentyield
  #   depends_on:
  #     - traefik
  #   networks:
  #     - web
  #     - internal
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    environment:
      DOZZLE_TAILSIZE: 500
      LOGSENE_ENABLED: "false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080

  logagent:
    container_name: logagent
    image: sematext/logagent:latest
    environment:
      - LOGS_TOKEN=${YOUR_LOGS_TOKEN}
      - LOG_GLOB=${LOG_GLOB}
      - LOGS_RECEIVER_URL="https://logsene-receiver.sematext.com"
    cap_add:
      - SYS_ADMIN
    restart: always
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'

networks:
  internal:
    external: false
  web:
    external: true
